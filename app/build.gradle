apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

def config = rootProject.extensions.getByName('ext')

android {
    compileSdkVersion config.compileSdkVersion
    defaultConfig {
        applicationId config.applicationId
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode config.versionCode
        versionName config.versionName
        testInstrumentationRunner config.testInstrumentationRunner
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            buildConfigField("String", "DB_NAME", "\"SweetNote.db\"")
            buildConfigField("String", "PREF_NAME", "\"SweetPrefName\"")
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            buildConfigField("String", "DB_NAME", "\"SweetNote.db\"")
            buildConfigField("String", "PREF_NAME", "\"SweetPrefName\"")
        }
    }
    dataBinding {
        enabled true
    }
    androidExtensions {
        experimental = true
    }
}

dependencies {
    implementation project(":domain")
    testImplementation project(path: ':domain', configuration: 'testOutput')
    androidTestImplementation project(path: ':domain', configuration: 'testOutput')
    implementation project(":data")
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    rootProject.fetchAllDependencies(this, delegate, '', 'implementation')
    rootProject.fetchAllDependencies(this, delegate, 'Test', 'testImplementation')
    rootProject.fetchAllDependencies(this, delegate, 'AndroidTest', 'androidTestImplementation')
}
